---
# Create new Block Storage
- name: Create/Remove the block storage
  digital_ocean_block_storage:
    state: "{{droplet_state}}"
    command: create
    api_token: "{{do_oauth_token}}"
    region: "{{item[1].region}}"
    block_size: 5
    volume_name: "volume_{{item[0]}}"
  loop: "{{ groups.all | zip(images) | list }}"
  
- name: Create/Remove the droplets
  digital_ocean_droplet:    
    backups: no
    image: "{{item[1].image}}"
    ipv6: no
    monitoring: yes
    name: "{{item[0]}}"
    oauth_token: "{{do_oauth_token}}"
    private_networking: no
    region: "{{item[1].region}}"
    size: "{{item[1].size}}"                
    ssh_keys: "{{ssh_keys}}"
    state: "{{droplet_state}}"
    unique_name: yes
    wait: yes
    wait_timeout: 300  
  loop: "{{ groups.all | zip(images) | list }}"       
  register: droplets

- name: Listing the droplet IPs
  debug:
    msg: "IP is {{ item.data.ip_address }} and hostname is {{ item.data.droplet.name }}"      
  loop: "{{droplets.results}}"
  when: droplet_state == "present"

- name: Replace the host file with right host ips
  replace:
    path: ./inventory/hosts  
    regexp: "{{ item.data.droplet.name }}"
    replace: "{{ item.data.droplet.name }} ansible_host={{ item.data.ip_address }}"
  loop: "{{droplets.results}}"
  when: droplet_state == "present"

# Attach Block Storage to a Droplet
- name: Attach/Detach the block storage
  digital_ocean_block_storage:
    state: "{{droplet_state}}"
    command: attach
    api_token: "{{do_oauth_token}}"
    volume_name: "volume_{{item.data.droplet.name}}"
    region: "{{item.data.droplet.region.slug}}"
    droplet_id: "{{ item.data.droplet.id }}"
  loop: "{{droplets.results}}"
  when: droplet_state == "present"
